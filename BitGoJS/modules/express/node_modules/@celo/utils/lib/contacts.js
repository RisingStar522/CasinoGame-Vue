"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isContact = exports.getContactNameHash = exports.getContactPhoneNumber = void 0;
var Web3Utils = __importStar(require("web3-utils"));
exports.getContactPhoneNumber = function (contact) {
    if (!contact) {
        throw new Error('Invalid contact');
    }
    if (!contact.phoneNumbers || !contact.phoneNumbers.length) {
        return null;
    }
    // TODO(Rossy) find the right phone number based on the address
    return contact.phoneNumbers[0].number;
};
exports.getContactNameHash = function (contact) {
    if (!contact) {
        throw new Error('Invalid contact');
    }
    return Web3Utils.keccak256(contact.displayName || '');
};
function isContact(contactOrNumber) {
    if (typeof contactOrNumber === 'object') {
        return 'recordID' in contactOrNumber;
    }
    return false;
}
exports.isContact = isContact;
//# sourceMappingURL=contacts.js.map