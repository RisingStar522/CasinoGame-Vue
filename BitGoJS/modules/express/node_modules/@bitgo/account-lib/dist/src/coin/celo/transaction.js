"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var Eth = __importStar(require("../eth"));
var types_1 = require("./types");
var Utils = __importStar(require("./utils"));
var Transaction = /** @class */ (function (_super) {
    __extends(Transaction, _super);
    function Transaction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Transaction.prototype.setTransactionData = function (txData) {
        this._transactionData = types_1.CeloTransactionData.fromJson(txData);
        this.updateFields();
    };
    /** @inheritdoc */
    Transaction.fromSerialized = function (coinConfig, common, serializedTx) {
        return new Transaction(coinConfig, common, Utils.deserialize(serializedTx));
    };
    return Transaction;
}(Eth.Transaction));
exports.Transaction = Transaction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29pbi9jZWxvL3RyYW5zYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSwwQ0FBOEI7QUFFOUIsaUNBQThDO0FBQzlDLDZDQUFpQztBQUVqQztJQUFpQywrQkFBZTtJQUFoRDs7SUFjQSxDQUFDO0lBYkMsd0NBQWtCLEdBQWxCLFVBQW1CLE1BQWM7UUFDL0IsSUFBSSxDQUFDLGdCQUFnQixHQUFHLDJCQUFtQixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELGtCQUFrQjtJQUNKLDBCQUFjLEdBQTVCLFVBQ0UsVUFBZ0MsRUFDaEMsTUFBc0IsRUFDdEIsWUFBb0I7UUFFcEIsT0FBTyxJQUFJLFdBQVcsQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBQ0gsa0JBQUM7QUFBRCxDQUFDLEFBZEQsQ0FBaUMsR0FBRyxDQUFDLFdBQVcsR0FjL0M7QUFkWSxrQ0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VDb2luIGFzIENvaW5Db25maWcgfSBmcm9tICdAYml0Z28vc3RhdGljcyc7XHJcbmltcG9ydCBFdGhlcmV1bUNvbW1vbiBmcm9tICdldGhlcmV1bWpzLWNvbW1vbic7XHJcbmltcG9ydCAqIGFzIEV0aCBmcm9tICcuLi9ldGgnO1xyXG5pbXBvcnQgeyBUeERhdGEgfSBmcm9tICcuLi9ldGgvaWZhY2UnO1xyXG5pbXBvcnQgeyBDZWxvVHJhbnNhY3Rpb25EYXRhIH0gZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCAqIGFzIFV0aWxzIGZyb20gJy4vdXRpbHMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRyYW5zYWN0aW9uIGV4dGVuZHMgRXRoLlRyYW5zYWN0aW9uIHtcclxuICBzZXRUcmFuc2FjdGlvbkRhdGEodHhEYXRhOiBUeERhdGEpOiB2b2lkIHtcclxuICAgIHRoaXMuX3RyYW5zYWN0aW9uRGF0YSA9IENlbG9UcmFuc2FjdGlvbkRhdGEuZnJvbUpzb24odHhEYXRhKTtcclxuICAgIHRoaXMudXBkYXRlRmllbGRzKCk7XHJcbiAgfVxyXG5cclxuICAvKiogQGluaGVyaXRkb2MgKi9cclxuICBwdWJsaWMgc3RhdGljIGZyb21TZXJpYWxpemVkKFxyXG4gICAgY29pbkNvbmZpZzogUmVhZG9ubHk8Q29pbkNvbmZpZz4sXHJcbiAgICBjb21tb246IEV0aGVyZXVtQ29tbW9uLFxyXG4gICAgc2VyaWFsaXplZFR4OiBzdHJpbmcsXHJcbiAgKTogVHJhbnNhY3Rpb24ge1xyXG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbihjb2luQ29uZmlnLCBjb21tb24sIFV0aWxzLmRlc2VyaWFsaXplKHNlcmlhbGl6ZWRUeCkpO1xyXG4gIH1cclxufVxyXG4iXX0=