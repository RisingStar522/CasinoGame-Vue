"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var hedera_1 = require("../../../resources/hbar/protobuf/hedera");
var errors_1 = require("../baseCoin/errors");
var transactionBuilder_1 = require("./transactionBuilder");
var utils_1 = require("./utils");
var _1 = require("./");
var baseCoin_1 = require("../baseCoin");
var WalletInitializationBuilder = /** @class */ (function (_super) {
    __extends(WalletInitializationBuilder, _super);
    function WalletInitializationBuilder(_coinConfig) {
        var _this = _super.call(this, _coinConfig) || this;
        _this._owners = [];
        _this._txBodyData = new hedera_1.proto.CryptoCreateTransactionBody();
        _this._txBody.cryptoCreateAccount = _this._txBodyData;
        _this._txBodyData.autoRenewPeriod = new hedera_1.proto.Duration({ seconds: 7890000 });
        return _this;
    }
    // region Base Builder
    /** @inheritdoc */
    WalletInitializationBuilder.prototype.buildImplementation = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this._txBodyData.key = { thresholdKey: this.buildOwnersKeys() };
                        this._txBodyData.initialBalance = 0;
                        this.transaction.setTransactionType(baseCoin_1.TransactionType.WalletInitialization);
                        return [4 /*yield*/, _super.prototype.buildImplementation.call(this)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     *
     * @param {boolean} rawKeys defines if the owners keys are obtained in raw or protocol default format
     * @returns {proto.ThresholdKey} the wallet threshold keys
     */
    WalletInitializationBuilder.prototype.buildOwnersKeys = function (rawKeys) {
        if (rawKeys === void 0) { rawKeys = true; }
        return this._owners.reduce(function (tKeys, key) {
            if (tKeys.keys && tKeys.keys.keys) {
                tKeys.keys.keys.push({
                    ed25519: utils_1.toUint8Array(new _1.KeyPair({ pub: key }).getKeys(rawKeys).pub),
                });
            }
            return tKeys;
        }, new hedera_1.proto.ThresholdKey({ threshold: 2, keys: { keys: [] } }));
    };
    /** @inheritdoc */
    WalletInitializationBuilder.prototype.initBuilder = function (tx) {
        _super.prototype.initBuilder.call(this, tx);
        this.transaction.setTransactionType(baseCoin_1.TransactionType.WalletInitialization);
        var createAcc = tx.txBody.cryptoCreateAccount;
        if (createAcc && createAcc.key && createAcc.key.thresholdKey) {
            this.initOwners(createAcc.key.thresholdKey);
        }
    };
    WalletInitializationBuilder.prototype.initOwners = function (keys) {
        var _this = this;
        if (keys.keys && keys.keys.keys) {
            keys.keys.keys.forEach(function (key) {
                _this.owner(utils_1.toHex(key.ed25519));
            });
        }
    };
    // endregion
    // region Common builder methods
    /**
     * Set one of the owners of the multisig wallet.
     *
     * @param {string} address The public key of the owner's account
     * @returns {WalletInitializationBuilder} This wallet initialization builder
     */
    WalletInitializationBuilder.prototype.owner = function (address) {
        if (this._owners.length >= transactionBuilder_1.DEFAULT_M) {
            throw new errors_1.BuildTransactionError('A maximum of ' + transactionBuilder_1.DEFAULT_M + ' owners can be set for a multisig wallet');
        }
        if (!utils_1.isValidPublicKey(address)) {
            throw new errors_1.BuildTransactionError('Invalid address: ' + address);
        }
        if (this._owners.includes(address)) {
            throw new errors_1.BuildTransactionError('Repeated owner address: ' + address);
        }
        this._owners.push(address);
        return this;
    };
    // endregion
    // region Validators
    WalletInitializationBuilder.prototype.validateMandatoryFields = function () {
        if (this._owners === undefined) {
            throw new errors_1.BuildTransactionError('Invalid transaction: missing wallet owners');
        }
        if (this._owners.length !== transactionBuilder_1.DEFAULT_M) {
            throw new errors_1.BuildTransactionError("Invalid transaction: wrong number of owners -- required: " + transactionBuilder_1.DEFAULT_M + ", found: " + this._owners.length);
        }
        _super.prototype.validateMandatoryFields.call(this);
    };
    return WalletInitializationBuilder;
}(transactionBuilder_1.TransactionBuilder));
exports.WalletInitializationBuilder = WalletInitializationBuilder;
//# sourceMappingURL=data:application/json;base64,