"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var abstractEthLikeCoin_1 = require("./abstractEthLikeCoin");
var account_lib_1 = require("@bitgo/account-lib");
var Celo = /** @class */ (function (_super) {
    __extends(Celo, _super);
    function Celo(bitgo, staticsCoin) {
        return _super.call(this, bitgo, staticsCoin) || this;
    }
    Celo.createInstance = function (bitgo, staticsCoin) {
        return new Celo(bitgo, staticsCoin);
    };
    Celo.prototype.isValidPub = function (pub) {
        var valid = true;
        try {
            new account_lib_1.Celo.KeyPair({ pub: pub });
        }
        catch (e) {
            valid = false;
        }
        return valid;
    };
    return Celo;
}(abstractEthLikeCoin_1.AbstractEthLikeCoin));
exports.Celo = Celo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Vsby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92Mi9jb2lucy9jZWxvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQU1BLDZEQUE0RDtBQUM1RCxrREFBNEQ7QUFFNUQ7SUFBMEIsd0JBQW1CO0lBQzNDLGNBQXNCLEtBQVksRUFBRSxXQUF1QztlQUN6RSxrQkFBTSxLQUFLLEVBQUUsV0FBVyxDQUFDO0lBQzNCLENBQUM7SUFFTSxtQkFBYyxHQUFyQixVQUFzQixLQUFZLEVBQUUsV0FBdUM7UUFDekUsT0FBTyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELHlCQUFVLEdBQVYsVUFBVyxHQUFXO1FBQ3BCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJO1lBQ0YsSUFBSSxrQkFBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsS0FBQSxFQUFFLENBQUMsQ0FBQztTQUNyQztRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUNmO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQ0gsV0FBQztBQUFELENBQUMsQUFsQkQsQ0FBMEIseUNBQW1CLEdBa0I1QztBQWxCWSxvQkFBSSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHByZXR0aWVyXG4gKi9cbmltcG9ydCB7IEJhc2VDb2luIH0gZnJvbSAnLi4vYmFzZUNvaW4nO1xuaW1wb3J0IHsgQml0R28gfSBmcm9tICcuLi8uLi9iaXRnbyc7XG5pbXBvcnQgeyBCYXNlQ29pbiBhcyBTdGF0aWNzQmFzZUNvaW4gfSBmcm9tICdAYml0Z28vc3RhdGljcyc7XG5pbXBvcnQgeyBBYnN0cmFjdEV0aExpa2VDb2luIH0gZnJvbSAnLi9hYnN0cmFjdEV0aExpa2VDb2luJztcbmltcG9ydCB7IENlbG8gYXMgQ2Vsb0FjY291bnRMaWIgfSBmcm9tICdAYml0Z28vYWNjb3VudC1saWInO1xuXG5leHBvcnQgY2xhc3MgQ2VsbyBleHRlbmRzIEFic3RyYWN0RXRoTGlrZUNvaW4ge1xuICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoYml0Z286IEJpdEdvLCBzdGF0aWNzQ29pbj86IFJlYWRvbmx5PFN0YXRpY3NCYXNlQ29pbj4pIHtcbiAgICBzdXBlcihiaXRnbywgc3RhdGljc0NvaW4pO1xuICB9XG5cbiAgc3RhdGljIGNyZWF0ZUluc3RhbmNlKGJpdGdvOiBCaXRHbywgc3RhdGljc0NvaW4/OiBSZWFkb25seTxTdGF0aWNzQmFzZUNvaW4+KTogQmFzZUNvaW4ge1xuICAgIHJldHVybiBuZXcgQ2VsbyhiaXRnbywgc3RhdGljc0NvaW4pO1xuICB9XG5cbiAgaXNWYWxpZFB1YihwdWI6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGxldCB2YWxpZCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIG5ldyBDZWxvQWNjb3VudExpYi5LZXlQYWlyKHsgcHViIH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHZhbGlkID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB2YWxpZDtcbiAgfVxufVxuIl19