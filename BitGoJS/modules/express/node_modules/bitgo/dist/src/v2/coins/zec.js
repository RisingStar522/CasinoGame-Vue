"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var bitGoUtxoLib = require("@bitgo/utxo-lib");
var Bluebird = require("bluebird");
var request = require("superagent");
var abstractUtxoCoin_1 = require("./abstractUtxoCoin");
var common = require("../../common");
var co = Bluebird.coroutine;
var Zec = /** @class */ (function (_super) {
    __extends(Zec, _super);
    function Zec(bitgo, network) {
        return _super.call(this, bitgo, network || bitGoUtxoLib.networks.zcash) || this;
    }
    Zec.createInstance = function (bitgo) {
        return new Zec(bitgo);
    };
    Zec.prototype.getChain = function () {
        return 'zec';
    };
    Zec.prototype.getFamily = function () {
        return 'zec';
    };
    Zec.prototype.getCoinLibrary = function () {
        return bitGoUtxoLib;
    };
    Zec.prototype.getFullName = function () {
        return 'ZCash';
    };
    Zec.prototype.supportsBlockTarget = function () {
        return false;
    };
    /**
     *
     * @param txBuilder
     * @returns {*}
     */
    Zec.prototype.prepareTransactionBuilder = function (txBuilder) {
        txBuilder.setVersion(bitGoUtxoLib.Transaction.ZCASH_SAPLING_VERSION);
        txBuilder.setVersionGroupId(0x892f2085);
        return txBuilder;
    };
    /**
     * Calculate the hash to verify the signature against
     * @param transaction Transaction object
     * @param inputIndex
     * @param pubScript
     * @param amount The previous output's amount
     * @param hashType
     * @returns {*}
     */
    Zec.prototype.calculateSignatureHash = function (transaction, inputIndex, pubScript, amount, hashType) {
        return transaction.hashForZcashSignature(inputIndex, pubScript, amount, hashType);
    };
    Zec.prototype.recoveryBlockchainExplorerUrl = function (url) {
        return common.Environments[this.bitgo.getEnv()].zecExplorerBaseUrl + url;
    };
    Zec.prototype.getAddressInfoFromExplorer = function (addressBase58) {
        var self = this;
        return co(function getAddressInfoFromExplorer() {
            var addrInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request.get(self.recoveryBlockchainExplorerUrl("/addr/" + addressBase58)).result()];
                    case 1:
                        addrInfo = _a.sent();
                        addrInfo.txCount = addrInfo.txApperances;
                        addrInfo.totalBalance = addrInfo.balanceSat;
                        return [2 /*return*/, addrInfo];
                }
            });
        }).call(this);
    };
    Zec.prototype.getUnspentInfoFromExplorer = function (addressBase58) {
        var self = this;
        return co(function getUnspentInfoFromExplorer() {
            var unspents;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request.get(self.recoveryBlockchainExplorerUrl("/addr/" + addressBase58 + "/utxo")).result()];
                    case 1:
                        unspents = _a.sent();
                        unspents.forEach(function processUnspent(unspent) {
                            unspent.amount = unspent.satoshis;
                            unspent.n = unspent.vout;
                        });
                        return [2 /*return*/, unspents];
                }
            });
        }).call(this);
    };
    return Zec;
}(abstractUtxoCoin_1.AbstractUtxoCoin));
exports.Zec = Zec;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiemVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3YyL2NvaW5zL3plYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBZ0Q7QUFDaEQsbUNBQXFDO0FBQ3JDLG9DQUFzQztBQUd0Qyx1REFBc0Q7QUFDdEQscUNBQXVDO0FBRXZDLElBQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUM7QUFPOUI7SUFBeUIsdUJBQWdCO0lBQ3ZDLGFBQVksS0FBWSxFQUFFLE9BQVE7ZUFDaEMsa0JBQU0sS0FBSyxFQUFFLE9BQU8sSUFBSSxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUN0RCxDQUFDO0lBRU0sa0JBQWMsR0FBckIsVUFBc0IsS0FBWTtRQUNoQyxPQUFPLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxzQkFBUSxHQUFSO1FBQ0UsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsdUJBQVMsR0FBVDtRQUNFLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELDRCQUFjLEdBQWQ7UUFDRSxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBRUQseUJBQVcsR0FBWDtRQUNFLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxpQ0FBbUIsR0FBbkI7UUFDRSxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsdUNBQXlCLEdBQXpCLFVBQTBCLFNBQWdDO1FBQ3hELFNBQVMsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ3JFLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4QyxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDSCxvQ0FBc0IsR0FBdEIsVUFBdUIsV0FBZ0IsRUFBRSxVQUFrQixFQUFFLFNBQWlCLEVBQUUsTUFBYyxFQUFFLFFBQWdCO1FBQzlHLE9BQU8sV0FBVyxDQUFDLHFCQUFxQixDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3BGLENBQUM7SUFFRCwyQ0FBNkIsR0FBN0IsVUFBOEIsR0FBVztRQUN2QyxPQUFPLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLGtCQUFrQixHQUFHLEdBQUcsQ0FBQztJQUMzRSxDQUFDO0lBRUQsd0NBQTBCLEdBQTFCLFVBQTJCLGFBQXFCO1FBQzlDLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQztRQUNsQixPQUFPLEVBQUUsQ0FBNkMsU0FBVSwwQkFBMEI7Ozs7NEJBQ3ZFLHFCQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLDZCQUE2QixDQUFDLFdBQVMsYUFBZSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBQTs7d0JBQW5HLFFBQVEsR0FBRyxTQUF3Rjt3QkFFekcsUUFBUSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO3dCQUN6QyxRQUFRLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUM7d0JBRTVDLHNCQUFPLFFBQVEsRUFBQzs7O1NBQ2pCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEIsQ0FBQztJQUVELHdDQUEwQixHQUExQixVQUEyQixhQUFxQjtRQUM5QyxJQUFNLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbEIsT0FBTyxFQUFFLENBQW9ELFNBQVUsMEJBQTBCOzs7OzRCQUM5RSxxQkFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxXQUFTLGFBQWEsVUFBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBQTs7d0JBQXhHLFFBQVEsR0FBRyxTQUE2Rjt3QkFFOUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxTQUFTLGNBQWMsQ0FBQyxPQUFPOzRCQUM5QyxPQUFPLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7NEJBQ2xDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQzt3QkFDM0IsQ0FBQyxDQUFDLENBQUM7d0JBRUgsc0JBQU8sUUFBUSxFQUFDOzs7U0FDakIsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQixDQUFDO0lBQ0gsVUFBQztBQUFELENBQUMsQUFsRkQsQ0FBeUIsbUNBQWdCLEdBa0Z4QztBQWxGWSxrQkFBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGJpdEdvVXR4b0xpYiBmcm9tICdAYml0Z28vdXR4by1saWInO1xuaW1wb3J0ICogYXMgQmx1ZWJpcmQgZnJvbSAnYmx1ZWJpcmQnO1xuaW1wb3J0ICogYXMgcmVxdWVzdCBmcm9tICdzdXBlcmFnZW50JztcbmltcG9ydCB7IEJpdEdvIH0gZnJvbSAnLi4vLi4vYml0Z28nO1xuaW1wb3J0IHsgQmFzZUNvaW4gfSBmcm9tICcuLi9iYXNlQ29pbic7XG5pbXBvcnQgeyBBYnN0cmFjdFV0eG9Db2luIH0gZnJvbSAnLi9hYnN0cmFjdFV0eG9Db2luJztcbmltcG9ydCAqIGFzIGNvbW1vbiBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5jb25zdCBjbyA9IEJsdWViaXJkLmNvcm91dGluZTtcblxuZXhwb3J0IGludGVyZmFjZSBaZWNUcmFuc2FjdGlvbkJ1aWxkZXIge1xuICBzZXRWZXJzaW9uOiAobnVtYmVyKSA9PiB2b2lkO1xuICBzZXRWZXJzaW9uR3JvdXBJZDogKG51bWJlcikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIFplYyBleHRlbmRzIEFic3RyYWN0VXR4b0NvaW4ge1xuICBjb25zdHJ1Y3RvcihiaXRnbzogQml0R28sIG5ldHdvcms/KSB7XG4gICAgc3VwZXIoYml0Z28sIG5ldHdvcmsgfHwgYml0R29VdHhvTGliLm5ldHdvcmtzLnpjYXNoKTtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGVJbnN0YW5jZShiaXRnbzogQml0R28pOiBCYXNlQ29pbiB7XG4gICAgcmV0dXJuIG5ldyBaZWMoYml0Z28pO1xuICB9XG5cbiAgZ2V0Q2hhaW4oKSB7XG4gICAgcmV0dXJuICd6ZWMnO1xuICB9XG5cbiAgZ2V0RmFtaWx5KCkge1xuICAgIHJldHVybiAnemVjJztcbiAgfVxuXG4gIGdldENvaW5MaWJyYXJ5KCkge1xuICAgIHJldHVybiBiaXRHb1V0eG9MaWI7XG4gIH1cblxuICBnZXRGdWxsTmFtZSgpIHtcbiAgICByZXR1cm4gJ1pDYXNoJztcbiAgfVxuXG4gIHN1cHBvcnRzQmxvY2tUYXJnZXQoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB0eEJ1aWxkZXJcbiAgICogQHJldHVybnMgeyp9XG4gICAqL1xuICBwcmVwYXJlVHJhbnNhY3Rpb25CdWlsZGVyKHR4QnVpbGRlcjogWmVjVHJhbnNhY3Rpb25CdWlsZGVyKTogYW55IHtcbiAgICB0eEJ1aWxkZXIuc2V0VmVyc2lvbihiaXRHb1V0eG9MaWIuVHJhbnNhY3Rpb24uWkNBU0hfU0FQTElOR19WRVJTSU9OKTtcbiAgICB0eEJ1aWxkZXIuc2V0VmVyc2lvbkdyb3VwSWQoMHg4OTJmMjA4NSk7XG4gICAgcmV0dXJuIHR4QnVpbGRlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGUgdGhlIGhhc2ggdG8gdmVyaWZ5IHRoZSBzaWduYXR1cmUgYWdhaW5zdFxuICAgKiBAcGFyYW0gdHJhbnNhY3Rpb24gVHJhbnNhY3Rpb24gb2JqZWN0XG4gICAqIEBwYXJhbSBpbnB1dEluZGV4XG4gICAqIEBwYXJhbSBwdWJTY3JpcHRcbiAgICogQHBhcmFtIGFtb3VudCBUaGUgcHJldmlvdXMgb3V0cHV0J3MgYW1vdW50XG4gICAqIEBwYXJhbSBoYXNoVHlwZVxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICovXG4gIGNhbGN1bGF0ZVNpZ25hdHVyZUhhc2godHJhbnNhY3Rpb246IGFueSwgaW5wdXRJbmRleDogbnVtYmVyLCBwdWJTY3JpcHQ6IEJ1ZmZlciwgYW1vdW50OiBudW1iZXIsIGhhc2hUeXBlOiBudW1iZXIpOiBCdWZmZXIge1xuICAgIHJldHVybiB0cmFuc2FjdGlvbi5oYXNoRm9yWmNhc2hTaWduYXR1cmUoaW5wdXRJbmRleCwgcHViU2NyaXB0LCBhbW91bnQsIGhhc2hUeXBlKTtcbiAgfVxuXG4gIHJlY292ZXJ5QmxvY2tjaGFpbkV4cGxvcmVyVXJsKHVybDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGNvbW1vbi5FbnZpcm9ubWVudHNbdGhpcy5iaXRnby5nZXRFbnYoKV0uemVjRXhwbG9yZXJCYXNlVXJsICsgdXJsO1xuICB9XG5cbiAgZ2V0QWRkcmVzc0luZm9Gcm9tRXhwbG9yZXIoYWRkcmVzc0Jhc2U1ODogc3RyaW5nKTogQmx1ZWJpcmQ8eyB0eENvdW50OiBudW1iZXI7IHRvdGFsQmFsYW5jZTogbnVtYmVyOyB9PiB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgcmV0dXJuIGNvPHsgdHhDb3VudDogbnVtYmVyOyB0b3RhbEJhbGFuY2U6IG51bWJlcjsgfT4oZnVuY3Rpb24gKmdldEFkZHJlc3NJbmZvRnJvbUV4cGxvcmVyKCkge1xuICAgICAgY29uc3QgYWRkckluZm8gPSB5aWVsZCByZXF1ZXN0LmdldChzZWxmLnJlY292ZXJ5QmxvY2tjaGFpbkV4cGxvcmVyVXJsKGAvYWRkci8ke2FkZHJlc3NCYXNlNTh9YCkpLnJlc3VsdCgpO1xuXG4gICAgICBhZGRySW5mby50eENvdW50ID0gYWRkckluZm8udHhBcHBlcmFuY2VzO1xuICAgICAgYWRkckluZm8udG90YWxCYWxhbmNlID0gYWRkckluZm8uYmFsYW5jZVNhdDtcblxuICAgICAgcmV0dXJuIGFkZHJJbmZvO1xuICAgIH0pLmNhbGwodGhpcyk7XG4gIH1cblxuICBnZXRVbnNwZW50SW5mb0Zyb21FeHBsb3JlcihhZGRyZXNzQmFzZTU4OiBzdHJpbmcpOiBCbHVlYmlyZDx7IGFkZHJlc3M6IHN0cmluZzsgYW1vdW50OiBudW1iZXI7IG46IG51bWJlcjsgfVtdPiB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgcmV0dXJuIGNvPHsgYWRkcmVzczogc3RyaW5nOyBhbW91bnQ6IG51bWJlcjsgbjogbnVtYmVyOyB9W10+KGZ1bmN0aW9uICpnZXRVbnNwZW50SW5mb0Zyb21FeHBsb3JlcigpIHtcbiAgICAgIGNvbnN0IHVuc3BlbnRzID0geWllbGQgcmVxdWVzdC5nZXQoc2VsZi5yZWNvdmVyeUJsb2NrY2hhaW5FeHBsb3JlclVybChgL2FkZHIvJHthZGRyZXNzQmFzZTU4fS91dHhvYCkpLnJlc3VsdCgpO1xuXG4gICAgICB1bnNwZW50cy5mb3JFYWNoKGZ1bmN0aW9uIHByb2Nlc3NVbnNwZW50KHVuc3BlbnQpIHtcbiAgICAgICAgdW5zcGVudC5hbW91bnQgPSB1bnNwZW50LnNhdG9zaGlzO1xuICAgICAgICB1bnNwZW50Lm4gPSB1bnNwZW50LnZvdXQ7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHVuc3BlbnRzO1xuICAgIH0pLmNhbGwodGhpcyk7XG4gIH1cbn1cbiJdfQ==