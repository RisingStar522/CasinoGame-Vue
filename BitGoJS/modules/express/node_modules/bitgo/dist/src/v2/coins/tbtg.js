"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var btg_1 = require("./btg");
var Tbtg = /** @class */ (function (_super) {
    __extends(Tbtg, _super);
    function Tbtg(bitgo) {
        // TODO: move to @bitgo/utxo-lib (BG-6821)
        return _super.call(this, bitgo, {
            messagePrefix: '\x18Bitcoin Signed Message:\n',
            bech32: 'tb',
            bip32: {
                public: 0x043587cf,
                private: 0x04358394
            },
            pubKeyHash: 0x6f,
            scriptHash: 0xc4,
            wif: 0xef,
            coin: 'btg'
        }) || this;
    }
    Tbtg.createInstance = function (bitgo) {
        return new Tbtg(bitgo);
    };
    Tbtg.prototype.getChain = function () {
        return 'tbtg';
    };
    Tbtg.prototype.getFullName = function () {
        return 'Testnet Bitcoin Gold';
    };
    return Tbtg;
}(btg_1.Btg));
exports.Tbtg = Tbtg;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGJ0Zy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92Mi9jb2lucy90YnRnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUVBLDZCQUE0QjtBQUU1QjtJQUEwQix3QkFBRztJQUMzQixjQUFZLEtBQVk7UUFDdEIsMENBQTBDO2VBQzFDLGtCQUFNLEtBQUssRUFBRTtZQUNYLGFBQWEsRUFBRSwrQkFBK0I7WUFDOUMsTUFBTSxFQUFFLElBQUk7WUFDWixLQUFLLEVBQUU7Z0JBQ0wsTUFBTSxFQUFFLFVBQVU7Z0JBQ2xCLE9BQU8sRUFBRSxVQUFVO2FBQ3BCO1lBQ0QsVUFBVSxFQUFFLElBQUk7WUFDaEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsR0FBRyxFQUFFLElBQUk7WUFDVCxJQUFJLEVBQUUsS0FBSztTQUNaLENBQUM7SUFDSixDQUFDO0lBRU0sbUJBQWMsR0FBckIsVUFBc0IsS0FBWTtRQUNoQyxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCx1QkFBUSxHQUFSO1FBQ0UsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELDBCQUFXLEdBQVg7UUFDRSxPQUFPLHNCQUFzQixDQUFDO0lBQ2hDLENBQUM7SUFDSCxXQUFDO0FBQUQsQ0FBQyxBQTVCRCxDQUEwQixTQUFHLEdBNEI1QjtBQTVCWSxvQkFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpdEdvIH0gZnJvbSAnLi4vLi4vYml0Z28nO1xuaW1wb3J0IHsgQmFzZUNvaW4gfSBmcm9tICcuLi9iYXNlQ29pbic7XG5pbXBvcnQgeyBCdGcgfSBmcm9tICcuL2J0Zyc7XG5cbmV4cG9ydCBjbGFzcyBUYnRnIGV4dGVuZHMgQnRnIHtcbiAgY29uc3RydWN0b3IoYml0Z286IEJpdEdvKSB7XG4gICAgLy8gVE9ETzogbW92ZSB0byBAYml0Z28vdXR4by1saWIgKEJHLTY4MjEpXG4gICAgc3VwZXIoYml0Z28sIHtcbiAgICAgIG1lc3NhZ2VQcmVmaXg6ICdcXHgxOEJpdGNvaW4gU2lnbmVkIE1lc3NhZ2U6XFxuJyxcbiAgICAgIGJlY2gzMjogJ3RiJyxcbiAgICAgIGJpcDMyOiB7XG4gICAgICAgIHB1YmxpYzogMHgwNDM1ODdjZixcbiAgICAgICAgcHJpdmF0ZTogMHgwNDM1ODM5NFxuICAgICAgfSxcbiAgICAgIHB1YktleUhhc2g6IDB4NmYsXG4gICAgICBzY3JpcHRIYXNoOiAweGM0LFxuICAgICAgd2lmOiAweGVmLFxuICAgICAgY29pbjogJ2J0ZydcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGVJbnN0YW5jZShiaXRnbzogQml0R28pOiBCYXNlQ29pbiB7XG4gICAgcmV0dXJuIG5ldyBUYnRnKGJpdGdvKTtcbiAgfVxuXG4gIGdldENoYWluKCkge1xuICAgIHJldHVybiAndGJ0Zyc7XG4gIH1cblxuICBnZXRGdWxsTmFtZSgpIHtcbiAgICByZXR1cm4gJ1Rlc3RuZXQgQml0Y29pbiBHb2xkJztcbiAgfVxufVxuIl19