"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var Bluebird = require("bluebird");
var co = Bluebird.coroutine;
var request = require("superagent");
var abstractUtxoCoin_1 = require("./abstractUtxoCoin");
var common = require("../../common");
var Dash = /** @class */ (function (_super) {
    __extends(Dash, _super);
    function Dash(bitgo, network) {
        // TODO: move to @bitgo/utxo-lib (BG-6821)
        // https://github.com/dashpay/dash/blob/master/src/chainparams.cpp#L152
        return _super.call(this, bitgo, network || {
            messagePrefix: '\x19Dash Signed Message:\n',
            bip32: {
                public: 0x0488b21e,
                private: 0x0488ade4,
            },
            pubKeyHash: 0x4c,
            scriptHash: 0x10,
            wif: 0xcc,
            dustThreshold: 0,
            dustSoftThreshold: 100000,
            feePerKb: 100000,
            coin: 'dash',
        }) || this;
    }
    Dash.createInstance = function (bitgo) {
        return new Dash(bitgo);
    };
    Dash.prototype.getChain = function () {
        return 'dash';
    };
    Dash.prototype.getFamily = function () {
        return 'dash';
    };
    Dash.prototype.getFullName = function () {
        return 'Dash';
    };
    Dash.prototype.supportsBlockTarget = function () {
        return false;
    };
    Dash.prototype.recoveryBlockchainExplorerUrl = function (url) {
        return common.Environments[this.bitgo.env].dashExplorerBaseUrl + url;
    };
    Dash.prototype.getAddressInfoFromExplorer = function (addressBase58) {
        return co(function getAddressInfoFromExplorer() {
            var addrInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request.get(this.recoveryBlockchainExplorerUrl("/addr/" + addressBase58)).result()];
                    case 1:
                        addrInfo = _a.sent();
                        addrInfo.txCount = addrInfo.txApperances;
                        addrInfo.totalBalance = addrInfo.balanceSat;
                        return [2 /*return*/, addrInfo];
                }
            });
        }).call(this);
    };
    Dash.prototype.getUnspentInfoFromExplorer = function (addressBase58) {
        return co(function getUnspentInfoFromExplorer() {
            var unspents;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, request.get(this.recoveryBlockchainExplorerUrl("/addr/" + addressBase58 + "/utxo")).result()];
                    case 1:
                        unspents = _a.sent();
                        unspents.forEach(function processUnspent(unspent) {
                            unspent.amount = unspent.satoshis;
                            unspent.n = unspent.vout;
                        });
                        return [2 /*return*/, unspents];
                }
            });
        }).call(this);
    };
    return Dash;
}(abstractUtxoCoin_1.AbstractUtxoCoin));
exports.Dash = Dash;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92Mi9jb2lucy9kYXNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG1DQUFxQztBQUdyQyxJQUFNLEVBQUUsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDO0FBQzlCLG9DQUFzQztBQUV0Qyx1REFBc0Q7QUFDdEQscUNBQXVDO0FBRXZDO0lBQTBCLHdCQUFnQjtJQUN4QyxjQUFZLEtBQVksRUFBRSxPQUFRO1FBQ2hDLDBDQUEwQztRQUMxQyx1RUFBdUU7ZUFDdkUsa0JBQU0sS0FBSyxFQUFFLE9BQU8sSUFBSTtZQUN0QixhQUFhLEVBQUUsNEJBQTRCO1lBQzNDLEtBQUssRUFBRTtnQkFDTCxNQUFNLEVBQUUsVUFBVTtnQkFDbEIsT0FBTyxFQUFFLFVBQVU7YUFDcEI7WUFDRCxVQUFVLEVBQUUsSUFBSTtZQUNoQixVQUFVLEVBQUUsSUFBSTtZQUNoQixHQUFHLEVBQUUsSUFBSTtZQUNULGFBQWEsRUFBRSxDQUFDO1lBQ2hCLGlCQUFpQixFQUFFLE1BQU07WUFDekIsUUFBUSxFQUFFLE1BQU07WUFDaEIsSUFBSSxFQUFFLE1BQU07U0FDYixDQUFDO0lBQ0osQ0FBQztJQUVNLG1CQUFjLEdBQXJCLFVBQXNCLEtBQVk7UUFDaEMsT0FBTyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsdUJBQVEsR0FBUjtRQUNFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRCx3QkFBUyxHQUFUO1FBQ0UsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELDBCQUFXLEdBQVg7UUFDRSxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQsa0NBQW1CLEdBQW5CO1FBQ0UsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsNENBQTZCLEdBQTdCLFVBQThCLEdBQVc7UUFDdkMsT0FBTyxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsbUJBQW1CLEdBQUcsR0FBRyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCx5Q0FBMEIsR0FBMUIsVUFBMkIsYUFBcUI7UUFDOUMsT0FBTyxFQUFFLENBQUMsU0FBVSwwQkFBMEI7Ozs7NEJBQzNCLHFCQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLDZCQUE2QixDQUFDLFdBQVMsYUFBZSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBQTs7d0JBQW5HLFFBQVEsR0FBRyxTQUF3Rjt3QkFFekcsUUFBUSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO3dCQUN6QyxRQUFRLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUM7d0JBRTVDLHNCQUFPLFFBQVEsRUFBQzs7O1NBQ2pCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEIsQ0FBQztJQUVELHlDQUEwQixHQUExQixVQUEyQixhQUFxQjtRQUM5QyxPQUFPLEVBQUUsQ0FBQyxTQUFVLDBCQUEwQjs7Ozs0QkFDM0IscUJBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsNkJBQTZCLENBQUMsV0FBUyxhQUFhLFVBQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUE7O3dCQUF4RyxRQUFRLEdBQUcsU0FBNkY7d0JBRTlHLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxjQUFjLENBQUMsT0FBTzs0QkFDOUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDOzRCQUNsQyxPQUFPLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7d0JBQzNCLENBQUMsQ0FBQyxDQUFDO3dCQUVILHNCQUFPLFFBQVEsRUFBQzs7O1NBQ2pCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEIsQ0FBQztJQUNILFdBQUM7QUFBRCxDQUFDLEFBbkVELENBQTBCLG1DQUFnQixHQW1FekM7QUFuRVksb0JBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBCbHVlYmlyZCBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgeyBCaXRHbyB9IGZyb20gJy4uLy4uL2JpdGdvJztcbmltcG9ydCB7IEJhc2VDb2luIH0gZnJvbSAnLi4vYmFzZUNvaW4nO1xuY29uc3QgY28gPSBCbHVlYmlyZC5jb3JvdXRpbmU7XG5pbXBvcnQgKiBhcyByZXF1ZXN0IGZyb20gJ3N1cGVyYWdlbnQnO1xuXG5pbXBvcnQgeyBBYnN0cmFjdFV0eG9Db2luIH0gZnJvbSAnLi9hYnN0cmFjdFV0eG9Db2luJztcbmltcG9ydCAqIGFzIGNvbW1vbiBmcm9tICcuLi8uLi9jb21tb24nO1xuXG5leHBvcnQgY2xhc3MgRGFzaCBleHRlbmRzIEFic3RyYWN0VXR4b0NvaW4ge1xuICBjb25zdHJ1Y3RvcihiaXRnbzogQml0R28sIG5ldHdvcms/KSB7XG4gICAgLy8gVE9ETzogbW92ZSB0byBAYml0Z28vdXR4by1saWIgKEJHLTY4MjEpXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2Rhc2hwYXkvZGFzaC9ibG9iL21hc3Rlci9zcmMvY2hhaW5wYXJhbXMuY3BwI0wxNTJcbiAgICBzdXBlcihiaXRnbywgbmV0d29yayB8fCB7XG4gICAgICBtZXNzYWdlUHJlZml4OiAnXFx4MTlEYXNoIFNpZ25lZCBNZXNzYWdlOlxcbicsXG4gICAgICBiaXAzMjoge1xuICAgICAgICBwdWJsaWM6IDB4MDQ4OGIyMWUsXG4gICAgICAgIHByaXZhdGU6IDB4MDQ4OGFkZTQsXG4gICAgICB9LFxuICAgICAgcHViS2V5SGFzaDogMHg0YyxcbiAgICAgIHNjcmlwdEhhc2g6IDB4MTAsXG4gICAgICB3aWY6IDB4Y2MsXG4gICAgICBkdXN0VGhyZXNob2xkOiAwLCAvLyBodHRwczovL2dpdGh1Yi5jb20vbGl0ZWNvaW4tcHJvamVjdC9saXRlY29pbi9ibG9iL3YwLjguNy4yL3NyYy9tYWluLmNwcCNMMzYwLUwzNjVcbiAgICAgIGR1c3RTb2Z0VGhyZXNob2xkOiAxMDAwMDAsIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9saXRlY29pbi1wcm9qZWN0L2xpdGVjb2luL2Jsb2IvdjAuOC43LjIvc3JjL21haW4uaCNMNTNcbiAgICAgIGZlZVBlcktiOiAxMDAwMDAsIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9saXRlY29pbi1wcm9qZWN0L2xpdGVjb2luL2Jsb2IvdjAuOC43LjIvc3JjL21haW4uY3BwI0w1NixcbiAgICAgIGNvaW46ICdkYXNoJyxcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGVJbnN0YW5jZShiaXRnbzogQml0R28pOiBCYXNlQ29pbiB7XG4gICAgcmV0dXJuIG5ldyBEYXNoKGJpdGdvKTtcbiAgfVxuXG4gIGdldENoYWluKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICdkYXNoJztcbiAgfVxuXG4gIGdldEZhbWlseSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnZGFzaCc7XG4gIH1cblxuICBnZXRGdWxsTmFtZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnRGFzaCc7XG4gIH1cblxuICBzdXBwb3J0c0Jsb2NrVGFyZ2V0KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJlY292ZXJ5QmxvY2tjaGFpbkV4cGxvcmVyVXJsKHVybDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gY29tbW9uLkVudmlyb25tZW50c1t0aGlzLmJpdGdvLmVudl0uZGFzaEV4cGxvcmVyQmFzZVVybCArIHVybDtcbiAgfVxuXG4gIGdldEFkZHJlc3NJbmZvRnJvbUV4cGxvcmVyKGFkZHJlc3NCYXNlNTg6IHN0cmluZyk6IEJsdWViaXJkPGFueT4ge1xuICAgIHJldHVybiBjbyhmdW5jdGlvbiAqZ2V0QWRkcmVzc0luZm9Gcm9tRXhwbG9yZXIoKSB7XG4gICAgICBjb25zdCBhZGRySW5mbyA9IHlpZWxkIHJlcXVlc3QuZ2V0KHRoaXMucmVjb3ZlcnlCbG9ja2NoYWluRXhwbG9yZXJVcmwoYC9hZGRyLyR7YWRkcmVzc0Jhc2U1OH1gKSkucmVzdWx0KCk7XG5cbiAgICAgIGFkZHJJbmZvLnR4Q291bnQgPSBhZGRySW5mby50eEFwcGVyYW5jZXM7XG4gICAgICBhZGRySW5mby50b3RhbEJhbGFuY2UgPSBhZGRySW5mby5iYWxhbmNlU2F0O1xuXG4gICAgICByZXR1cm4gYWRkckluZm87XG4gICAgfSkuY2FsbCh0aGlzKTtcbiAgfVxuXG4gIGdldFVuc3BlbnRJbmZvRnJvbUV4cGxvcmVyKGFkZHJlc3NCYXNlNTg6IHN0cmluZyk6IEJsdWViaXJkPGFueT4ge1xuICAgIHJldHVybiBjbyhmdW5jdGlvbiAqZ2V0VW5zcGVudEluZm9Gcm9tRXhwbG9yZXIoKSB7XG4gICAgICBjb25zdCB1bnNwZW50cyA9IHlpZWxkIHJlcXVlc3QuZ2V0KHRoaXMucmVjb3ZlcnlCbG9ja2NoYWluRXhwbG9yZXJVcmwoYC9hZGRyLyR7YWRkcmVzc0Jhc2U1OH0vdXR4b2ApKS5yZXN1bHQoKTtcblxuICAgICAgdW5zcGVudHMuZm9yRWFjaChmdW5jdGlvbiBwcm9jZXNzVW5zcGVudCh1bnNwZW50KSB7XG4gICAgICAgIHVuc3BlbnQuYW1vdW50ID0gdW5zcGVudC5zYXRvc2hpcztcbiAgICAgICAgdW5zcGVudC5uID0gdW5zcGVudC52b3V0O1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiB1bnNwZW50cztcbiAgICB9KS5jYWxsKHRoaXMpO1xuICB9XG59XG4iXX0=